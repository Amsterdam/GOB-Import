{
  "version": "0.1",
  "catalogue": "bag",
  "entity": "nummeraanduidingen",
  "source": {
    "name": "AMSBI",
    "application": "Neuron",
    "entity_id": "identificatie",
    "type": "oracle",
    "schema": "Neuron",
    "query": [
"    SELECT a.adresnummer                                                                          AS identificatie",
"    ,      a.adresvolgnummer                                                                      AS volgnummer",
"    ,      a.statuscode                                                                           AS status_code",
"    ,      s.omschrijving                                                                         AS status_omschrijving",
"    ,      a.huisnummer                                                                           AS huisnummer",
"    ,      a.huisletter                                                                           AS huisletter",
"    ,      a.toevoeging                                                                           AS huisnummertoevoeging",
"    ,      a.postcode_num || a.postcode_alf                                                       AS postcode",
"    ,      a.indgeconstateerd                                                                     AS geconstateerd",
"    ,      q1.openbareruimtenummer                                                                AS ligt_aan_bag_openbareruimte",
"    ,      to_char(a.datumopvoer, 'YYYY-MM-DD HH24:MI:SS')                                        AS begin_geldigheid",
"    ,      to_char(q2.datumopvoer, 'YYYY-MM-DD HH24:MI:SS')                                       AS eind_geldigheid",
"    ,      a.indinonderzoek                                                                       AS aanduiding_in_onderzoek",
"    ,      a.adrestype                                                                            AS type_aot_code",
"    ,      t.omschrijving                                                                         AS type_aot_omschrijving",
"    ,      to_char(a.dd_document, 'YYYY-MM-DD')                                                   AS documentdatum",
"    ,      a.documentnummer                                                                       AS documentnummer",
"    ,      TRIM(nvl(regexp_substr(a.documentnummer, '^(.*?)_', 1, 1, NULL, 1), a.documentnummer)) AS dossier",
"    ,      a.bagproces                                                                            AS bagproces_code",
"    ,      m.omschrijving                                                                         AS bagproces_omschrijving",
"    ,      CASE q2.indhoofdadres",
"      WHEN 'J' THEN 'Hoofdadres'",
"      WHEN 'N' THEN 'Nevenadres'",
"      END                                                                                         AS type_adres",
"    ,      q3.verblijfseenheidnummer                                                              AS adresseert_bag_verblijfsobject",
"    ,      q4.ligplaatsnummer                                                                     AS adresseert_bag_ligplaats",
"    ,      q5.standplaatsnummer                                                                   AS adresseert_bag_standplaats",
"    ,      to_char(a.creation, 'YYYY-MM-DD HH24:MI:SS')                                           AS registratiedatum",
"    ,      a.adres_id                                                                             AS source_id",
"    ,      NVL2(q2.datumopvoer, to_char(q2.datumopvoer, 'YYYY-MM-DD HH24:MI:SS')",
"    , CASE s.status",
"      WHEN 2 THEN to_char(a.datumopvoer, 'YYYY-MM-DD HH24:MI:SS')",
"      ELSE NULL",
"      END",
"      )                                                                                           AS expirationdate",
"    ,      q3.ligt_in_woonplaats                                                                  AS ligt_in_bag_woonplaats",
"      FROM   basis.adres a",
"      -- begindatum gebruiken als einddatum volgende cyclus",
"      JOIN  (SELECT x.adresnummer",
"    ,      x.adresvolgnummer",
"    ,      dense_rank() OVER (partition BY x.adresnummer ORDER BY x.adresvolgnummer) +1 AS rang",
"      FROM   basis.adres x",
"      WHERE  x.indauthentiek = 'J') q1 ON a.adresnummer = q1.adresnummer",
"      AND a.adresvolgnummer = q1.adresvolgnummer",
"      LEFT OUTER JOIN  (SELECT y.adresnummer",
"    ,      y.adresvolgnummer",
"    ,      y.datumopvoer",
"    ,      dense_rank() OVER (partition BY y.adresnummer ORDER BY y.adresvolgnummer) AS rang",
"      FROM   basis.adres y",
"      WHERE  y.indauthentiek = 'J') q2 ON  q1.adresnummer = q2.adresnummer",
"      AND q1.rang = q2.rang",
"      -- selecteren openbare ruimte",
"      LEFT OUTER JOIN (SELECT DISTINCT o.openbareruimte_id",
"    ,      o.openbareruimtenummer",
"      FROM   basis.openbareruimte o",
"      WHERE  o.indauthentiek = 'J') q1 ON a.openbareruimte_id = q1.openbareruimte_id",
"      -- selecteren woonplaats",
"      LEFT OUTER JOIN (SELECT w2.openbareruimte_id",
"    ,      listagg(w2.woonplaatsnummer, ';') WITHIN GROUP (ORDER BY w2.woonplaatsnummer) AS ligt_in_woonplaats",
"      FROM  (SELECT o.openbareruimte_id",
"    ,      w.woonplaats_id",
"    ,      w.woonplaatsnummer",
"      FROM   basis.openbareruimte o",
"      JOIN   basis.woonplaats     w ON o.woonplaats_id = w.woonplaats_id",
"      WHERE  o.indauthentiek = 'J'",
"      AND    w.indauthentiek = 'J'",
"      GROUP BY o.openbareruimte_id",
"    ,        w.woonplaats_id",
"    ,        w.woonplaatsnummer) w2",
"      GROUP BY w2.openbareruimte_id) q3 ON  q1.openbareruimte_id = q3.openbareruimte_id",
"      -- selecteren type adresseerbaar object",
"      LEFT OUTER JOIN basis.adrestype t ON a.adrestype = t.adrestype",
"      -- selecteren status",
"      LEFT OUTER JOIN basis.adresstatus s ON a.statuscode = s.status",
"      -- selecteren bagproces / mutatiereden",
"      LEFT OUTER JOIN basis.mutatiereden m ON a.bagproces = m.id",
"      -- selecteren hoofdadres/nevenadres (hoofdadres igv hoofdadres+nevenadres)",
"      LEFT OUTER JOIN (SELECT adres_id",
"    ,      MIN(indhoofdadres) AS indhoofdadres",
"      FROM   basis.verblijfseenheid_adres",
"      GROUP BY adres_id",
"      UNION",
"      SELECT adres_id",
"    ,      MIN(indhoofdadres) AS indhoofdadres",
"      FROM   basis.ligplaats_adres",
"      GROUP BY adres_id",
"      UNION",
"      SELECT adres_id",
"    ,      MIN(indhoofdadres) AS indhoofdadres",
"      FROM   basis.standplaats_adres",
"      GROUP BY adres_id) q2 ON a.adres_id = q2.adres_id",
"      -- selecteren verblijfsobject",
"      LEFT OUTER JOIN (SELECT va.verblijfseenheid_id",
"    ,      va.adres_id",
"    ,      ve.verblijfseenheidnummer",
"      FROM   basis.verblijfseenheid_adres  va",
"      JOIN   basis.verblijfseenheid        ve ON  va.verblijfseenheid_id = ve.verblijfseenheid_id",
"      AND va.verblijfseenheidvolgnummer = ve.verblijfseenheidvolgnummer",
"      WHERE  ve.indauthentiek = 'J'",
"      GROUP BY va.verblijfseenheid_id",
"    ,        va.adres_id",
"    ,        ve.verblijfseenheidnummer) q3 ON a.adres_id = q3.adres_id",
"      -- selecteren ligplaats",
"      LEFT OUTER JOIN (SELECT la.ligplaats_id",
"    ,      la.adres_id",
"    ,      lp.ligplaatsnummer",
"      FROM   basis.ligplaats_adres la",
"      JOIN   basis.ligplaats       lp ON  la.ligplaats_id = lp.ligplaats_id",
"      AND la.ligplaatsvolgnummer = lp.ligplaatsvolgnummer",
"      WHERE  lp.indauthentiek = 'J'",
"      GROUP BY la.ligplaats_id",
"    ,        la.adres_id",
"    ,        lp.ligplaatsnummer) q4 ON a.adres_id = q4.adres_id",
"      -- selecteren standplaats",
"      LEFT OUTER JOIN (SELECT sa.standplaats_id",
"    ,      sa.adres_id",
"    ,      sp.standplaatsnummer",
"      FROM   basis.standplaats_adres sa",
"      JOIN   basis.standplaats       sp ON  sa.standplaats_id = sp.standplaats_id",
"      AND sa.standplaatsvolgnummer = sp.standplaatsvolgnummer",
"      WHERE  sp.indauthentiek = 'J'",
"      GROUP BY sa.standplaats_id",
"    ,        sa.adres_id",
"    ,        sp.standplaatsnummer) q5 ON a.adres_id = q5.adres_id",
"      WHERE  a.indauthentiek = 'J'"
    ]
  },
  "gob_mapping": {
    "identificatie": {
      "source_mapping": "identificatie"
    },
    "volgnummer": {
      "source_mapping": "volgnummer"
    },
    "huisnummer": {
      "source_mapping": "huisnummer"
    },
    "geconstateerd": {
      "source_mapping": "geconstateerd",
      "format": "JN"
    },
    "huisletter": {
      "source_mapping": "huisletter"
    },
    "huisnummertoevoeging": {
      "source_mapping": "huisnummertoevoeging"
    },
    "postcode": {
      "source_mapping": "postcode"
    },
    "ligt_in_woonplaats": {
      "source_mapping": {
        "bronwaarde": "ligt_in_bag_woonplaats"
      }
    },
    "begin_geldigheid": {
      "source_mapping": "begin_geldigheid",
      "format": "%Y-%m-%d %H:%M:%S"
    },
    "eind_geldigheid": {
      "source_mapping": "eind_geldigheid",
      "format": "%Y-%m-%d %H:%M:%S"
    },
    "aanduiding_in_onderzoek": {
      "source_mapping": "aanduiding_in_onderzoek",
      "format": "JN"
    },
    "ligt_aan_openbareruimte": {
      "source_mapping": {
        "bronwaarde": "ligt_aan_bag_openbareruimte"
      }
    },
    "type_adresseerbaar_object": {
      "source_mapping": {
        "code": "type_aot_code",
        "omschrijving": "type_aot_omschrijving"
      }
    },
    "documentdatum": {
      "source_mapping": "documentdatum"
    },
    "documentnummer": {
      "source_mapping": "documentnummer"
    },
    "status": {
      "source_mapping": {
        "code": "status_code",
        "omschrijving": "status_omschrijving"
      }
    },
    "type_adres": {
      "source_mapping": "type_adres"
    },
    "adresseert_verblijfsobject": {
      "source_mapping": {
        "bronwaarde": "adresseert_bag_verblijfsobject"
      }
    },
    "adresseert_ligplaats": {
      "source_mapping": {
        "bronwaarde": "adresseert_bag_ligplaats"
      }
    },
    "adresseert_standplaats": {
      "source_mapping": {
        "bronwaarde": "adresseert_bag_standplaats"
      }
    },
    "heeft_dossier": {
      "source_mapping": {
        "bronwaarde": "dossier"
      }
    },
    "bagproces": {
      "source_mapping": {
        "code": "bagproces_code",
        "omschrijving": "bagproces_omschrijving"
      }
    },
    "registratiedatum": {
      "source_mapping": "registratiedatum",
      "format": "%Y-%m-%d %H:%M:%S"
    },
    "_expiration_date": {
      "source_mapping": "expirationdate",
      "format": "%Y-%m-%d %H:%M:%S"
    }
  }
}
